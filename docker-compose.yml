
services:
  scraper_api: # Servicio_ScrapingReddit
    build:
      context: ./servicio_scraping_reddit
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./servicio_scraping_reddit/app:/app/app 
    env_file:
      - .env
    depends_on:
      - redis
    container_name: scraper_api_service

  text_processor_api: # Servicio_ProcesamientoTexto
    build:
      context: ./servicio_procesamiento_texto
      dockerfile: Dockerfile
    ports:
      - "8001:8000" 
    volumes:
      - ./servicio_procesamiento_texto/app:/app/app 
    env_file:
      - .env 
    depends_on:
      - redis 
    container_name: text_processor_api_service

  audio_api: # Servicio_Audio
    build:
      context: ./servicio_audio
      dockerfile: Dockerfile
    ports:
      - "8002:8000" 
    volumes:
      - ./servicio_audio/app:/app/app 
      # --- LÍNEA MODIFICADA/NUEVA para el bind mount ---
      - ./GENERATED_ASSETS/audios:/app/generated_audios 
      - ./secrets/video-generator-project-82bf0abccf3d.json:/app/gcp_credentials/service_account_key.json:ro 
    env_file:
      - .env 
    container_name: audio_api_service

  visual_generator_api: # Servicio_GeneracionVisuales
    build:
      context: ./servicio_generacion_visuales
      dockerfile: Dockerfile
    ports:
      - "8003:8000" 
    volumes:
      - ./servicio_generacion_visuales/app:/app/app 
      # --- LÍNEA MODIFICADA/NUEVA para el bind mount de visuales ---
      - ./GENERATED_ASSETS/visuals:/app/generated_visuals 
      # ^ Mapea tu carpeta local a la ruta interna del contenedor
    env_file:
      - .env 
    container_name: visual_generator_api_service
  
  orchestrator_api:
    build:
      context: ./servicio_orquestador
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    volumes:
      - ./servicio_orquestador/app:/app/app
    env_file:
      - .env
    depends_on: # <--- SECCIÓN CORREGIDA
      - redis
      - scraper_api       # Nombre del servicio clave
      - text_processor_api  # Nombre del servicio clave
      - audio_api         # Nombre del servicio clave
      - visual_generator_api # Nombre del servicio clave
    container_name: orchestrator_api_service

 # ...
  orchestrator_worker:
    build:
      context: ./servicio_orquestador
      dockerfile: Dockerfile
    volumes:
      - ./servicio_orquestador/app:/app/app
    env_file:
      - .env
    # --- LÍNEA MODIFICADA ---
    command: celery -A app.celery_app worker -l INFO -P gevent -c 50 # Usamos gevent y aumentamos concurrencia
    depends_on:
      - redis
      - scraper_api # Mantén las dependencias para asegurar que los servicios estén nombrados en la red
      - text_processor_api
      - audio_api
      - visual_generator_api
    container_name: orchestrator_worker_service
# ...
  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379" 
    # volumes:
    #   - redis_data:/data
    container_name: redis_service

# Define los volúmenes nombrados usados por los servicios
volumes:
  generated_audio_data:  # Para Servicio_Audio
  generated_visuals_data: # Nuevo: Para Servicio_GeneracionVisuales
  # redis_data: # Si decides persistir datos de Redis